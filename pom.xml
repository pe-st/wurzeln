<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.schlau.wurzeln.root</groupId>
    <artifactId>root</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>${project.groupId}.${project.artifactId}</name>

    <modules>
        <module>quarkus-3.8</module> <!-- 3.8 has LTS (https://quarkus.io/blog/quarkus-3-8-released/) -->
        <module>quarkus-3.9</module>
        <module>quarkus-3.10</module>
        <module>quarkus-3.11</module>
        <module>quarkus-3.12</module>
        <module>quarkus-3.13</module>
        <module>quarkus-3.14</module>
        <module>quarkus-3.15</module> <!-- 3.15 has LTS (https://quarkus.io/blog/quarkus-3-15-1-released/) -->
        <module>quarkus-3.16</module>
        <module>wildfly-26.1</module>
        <module>wildfly-28</module>
        <module>wildfly-30</module>
        <module>wildfly-31</module>
        <module>wildfly-32</module>
        <module>wildfly-33</module>
        <module>wildfly-34</module>
        <module>update-checker</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Override this with `17` in your application POM if so desired. -->
        <!-- Until Java 8 is a thing of the past we have to live with two versioning schemes (see JEP223): -->
        <!-- - the Java release (the 'de facto' Java major version number, e.g. 8 for Java 1.8, and 9 for Java 9), -->
        <!--   supported in the compiler plugin as `<release>` for JDK 9 and later -->
        <!-- - the official Java version number, e.g. 1.8 for Java 1.8, and 9 for Java 9 -->
        <!--   (this is used for 'legacy' interfaces, e.g. the -source/-target switches of javac) -->
        <java.release>11</java.release>

        <!-- Java/Jakarta EE modules that were removed from Java SE after Java 8 -->
        <!-- (see http://openjdk.java.net/jeps/320) -->
        <!-- For the Jakarta EE successors to the Java EE modules the version of Jakarta EE8/Wildfly 18 is given -->
        <!-- The versions here are the latest individual version, some servers override them, -->
        <!-- in some cases with different artifacts (that's why group/artifact are variable) -->
        <javax.jaxb.version>2.3.1</javax.jaxb.version>
        <javax.jws.version>1.0-MR1</javax.jws.version>
        <javax.soap-api.version>1.4.0</javax.soap-api.version>
        <javax.activation.version>1.1.1</javax.activation.version>
        <jakarta.activation.version>1.2.2</jakarta.activation.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <javax.transaction-api.version>1.3</javax.transaction-api.version>
        <javax.xml.bind.groupId>javax.xml.bind</javax.xml.bind.groupId>
        <javax.xml.bind.artifactId>jaxb-api</javax.xml.bind.artifactId>
        <javax.xml.bind.version>${javax.jaxb.version}</javax.xml.bind.version>
        <javax.xml.ws.groupId>javax.xml.ws</javax.xml.ws.groupId>
        <javax.xml.ws.artifactId>jaxws-api</javax.xml.ws.artifactId>
        <javax.xml.ws.version>${javax.jaxb.version}</javax.xml.ws.version>
        <javax.xml.soap.groupId>javax.xml.soap</javax.xml.soap.groupId>
        <javax.xml.soap.artifactId>javax.xml.soap-api</javax.xml.soap.artifactId>
        <javax.xml.soap.version>${javax.soap-api.version}</javax.xml.soap.version>
        <javax.annotation.groupId>javax.annotation</javax.annotation.groupId>
        <javax.annotation.artifactId>javax.annotation-api</javax.annotation.artifactId>
        <javax.annotation.version>${javax.annotation-api.version}</javax.annotation.version>
        <javax.transaction.groupId>javax.transaction</javax.transaction.groupId>
        <javax.transaction.artifactId>javax.transaction-api</javax.transaction.artifactId>
        <javax.transaction.version>${javax.transaction-api.version}</javax.transaction.version>

        <!-- prevent javadoc failures in JDK 8 -->
        <additionalparam>-Xdoclint:none</additionalparam>

        <!-- it's maven-dependency-plugin:3.7.0 that requires 3.6.3 -->
        <minimum-maven-version>3.6.3</minimum-maven-version>

        <!-- use 'versions:display-dependency-updates versions:display-plugin-updates' -->
        <!-- in update-checker to find newer versions of artifacts and plugins -->
        <!-- for plugins see also the section in README.md -->

        <!-- non-apache maven plugin versions -->
        <asciidoctor.plugin.version>3.1.1</asciidoctor.plugin.version>
        <build-helper.plugin.version>3.6.0</build-helper.plugin.version>
        <docker.plugin.version>0.45.1</docker.plugin.version>
        <extra-enforcer-rules.plugin.version>1.9.0</extra-enforcer-rules.plugin.version>
        <jacoco.plugin.version>0.8.12</jacoco.plugin.version>
        <!-- the jandex version is overwritten in the quarkus modules -->
        <jandex.plugin.version>3.2.3</jandex.plugin.version>
        <nexus-staging.plugin.version>1.7.0</nexus-staging.plugin.version>
        <openapi-generator.plugin.version>7.10.0</openapi-generator.plugin.version>
        <!-- Don't use 3.0.57..3.0.64 because of https://github.com/swagger-api/swagger-codegen-generators/issues/1295 -->
        <!-- (still not fixed for non-spring apps, see https://github.com/swagger-api/swagger-codegen-generators/pull/1308) -->
        <swagger-codegen.plugin.version>3.0.56</swagger-codegen.plugin.version>
        <versions.plugin.version>2.18.0</versions.plugin.version>
        <wildfly.plugin.version>5.0.1.Final</wildfly.plugin.version>

        <!-- apache maven plugin versions (in alphabetical order) -->
        <maven.assembly.plugin.version>3.7.1</maven.assembly.plugin.version>
        <maven.clean.plugin.version>3.4.0</maven.clean.plugin.version>
        <maven.compiler.plugin.version>3.13.0</maven.compiler.plugin.version>
        <maven.dependency.plugin.version>3.8.1</maven.dependency.plugin.version>
        <maven.deploy.plugin.version>3.1.3</maven.deploy.plugin.version>
        <maven.ear.plugin.version>3.3.0</maven.ear.plugin.version>
        <maven.ejb.plugin.version>3.2.1</maven.ejb.plugin.version>
        <maven.enforcer.plugin.version>3.5.0</maven.enforcer.plugin.version>
        <maven.failsafe.plugin.version>3.5.2</maven.failsafe.plugin.version>
        <maven.install.plugin.version>3.1.3</maven.install.plugin.version>
        <maven.jar.plugin.version>3.4.2</maven.jar.plugin.version>
        <maven.javadoc.plugin.version>3.11.2</maven.javadoc.plugin.version>
        <maven.rar.plugin.version>3.0.0</maven.rar.plugin.version>
        <maven.release.plugin.version>3.1.1</maven.release.plugin.version>
        <maven.resources.plugin.version>3.3.1</maven.resources.plugin.version>
        <maven.scm.plugin.version>2.1.0</maven.scm.plugin.version>
        <maven.shade.plugin.version>3.6.0</maven.shade.plugin.version>
        <maven.site.plugin.version>3.21.0</maven.site.plugin.version>
        <maven.source.plugin.version>3.3.1</maven.source.plugin.version>
        <maven.surefire.plugin.version>${maven.failsafe.plugin.version}</maven.surefire.plugin.version>
        <maven.war.plugin.version>3.4.0</maven.war.plugin.version>

        <!-- artifact versions -->
        <apache.commons.lang3.version>3.17.0</apache.commons.lang3.version>
        <logback.version>1.5.12</logback.version>
        <lombok.version>1.18.36</lombok.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <mapstruct.version>1.6.3</mapstruct.version>
        <io.opentelemetry.instrumentation.version>2.10.0</io.opentelemetry.instrumentation.version>
        <slf4j.version>2.0.16</slf4j.version>

        <!-- latest Jackson version for projects independent of an application server (AS) -->
        <!-- most of the AS submodules redefine it with an older version -->
        <jackson-2-version>2.18.2</jackson-2-version>
        <jackson-bom.version>2.18.2</jackson-bom.version>

        <!-- latest version for projects independent of an application server (AS) -->
        <!-- with an AS it is redefined to be the version used by the AS's resteasy artifact -->
        <apache.httpclient.version>4.5.14</apache.httpclient.version>

        <!-- Java Expression Language (JSR 341) generally defined; the application servers -->
        <!-- have slightly different version strings (3.0.1-b08-jbossorg-1 and 3.0.1.b08-redhat-1), -->
        <!-- but it's always 3.0.1 (except with Jakarta EE) -->
        <javax.el.version>3.0.1-b11</javax.el.version>
        <jakarta.el.version>3.0.4</jakarta.el.version>

        <!-- byte code manipulation tools, mostly used for tests, but not exclusively -->
        <!-- note that byte-buddy pulls in asm, so asm.version should be the one used by the given byte-buddy -->
        <!-- (check `version.asm` in maven3_repo\net\bytebuddy\byte-buddy-parent\x.y.z\byte-buddy-parent-x.y.z.pom) -->
        <asm.version>9.7.1</asm.version>
        <byte-buddy.version>1.15.10</byte-buddy.version>

        <!-- use the latest Bouncy Castle version despite what Quarkus defines in its BOM -->
        <bouncycastle.version>1.79</bouncycastle.version>

        <!-- testing and static analysis -->
        <opentest4j.version>1.3.0</opentest4j.version>
        <junit.platform.version>1.11.3</junit.platform.version>
        <junit.jupiter.version>5.11.3</junit.jupiter.version>
        <hamcrest.version>3.0</hamcrest.version>
        <mockito.version>5.14.2</mockito.version>
        <equalsverifier.version>3.17.5</equalsverifier.version>
        <json.unit.version>4.1.0</json.unit.version>
        <jsonassert.version>1.5.3</jsonassert.version>
        <restassured.version>5.5.0</restassured.version>
        <wiremock.version>3.10.0</wiremock.version>

        <!-- Docker has a special DNS name 'host.docker.internal', but only starting with Docker 18.03... -->
        <!-- Simulating this variable depending on the OS (see also the profiles below overriding it) -->
        <!-- This IP address is the standard virtualbox IP address for localhost, used on our Windows 7 machines -->
        <docker-host-internal>10.0.2.2</docker-host-internal>
    </properties>

    <!-- no dependencies in this POM, as dependencies from a parent POM can't be excluded -->

    <dependencyManagement>
        <dependencies>
            <!-- Java EE modules removed from Java SE in Java 11 -->
            <!-- Usually there is also a dependencyManagement entry in the AS pom -->
            <dependency>
                <groupId>${javax.xml.bind.groupId}</groupId>
                <artifactId>${javax.xml.bind.artifactId}</artifactId>
                <version>${javax.xml.bind.version}</version>
            </dependency>
            <dependency>
                <groupId>${javax.xml.ws.groupId}</groupId>
                <artifactId>${javax.xml.ws.artifactId}</artifactId>
                <version>${javax.xml.ws.version}</version>
            </dependency>
            <dependency>
                <groupId>${javax.xml.soap.groupId}</groupId>
                <artifactId>${javax.xml.soap.artifactId}</artifactId>
                <version>${javax.xml.soap.version}</version>
            </dependency>
            <dependency>
                <groupId>${javax.annotation.groupId}</groupId>
                <artifactId>${javax.annotation.artifactId}</artifactId>
                <version>${javax.annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>${javax.transaction.groupId}</groupId>
                <artifactId>${javax.transaction.artifactId}</artifactId>
                <version>${javax.transaction.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.jws</groupId>
                <artifactId>jsr181-api</artifactId>
                <version>${javax.jws.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${javax.activation.version}</version>
            </dependency>
            <dependency>
                <!-- this is the Jakarta EE8/9 artifact for Activation. If you get a -->
                <!-- 'com.sun.activation:jakarta.activation' not found in a Jakarta EE 10 -->
                <!-- application it is a sign that you have a non-EE10 dependency somewhere... -->
                <groupId>com.sun.activation</groupId>
                <artifactId>jakarta.activation</artifactId>
                <version>${jakarta.activation.version}</version>
            </dependency>

            <!-- utils -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.commons.lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <version>${lombok-mapstruct-binding.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-jdk8</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- other dependencies -->
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson-bom.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.el</artifactId>
                <version>${javax.el.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.el</artifactId>
                <version>${jakarta.el.version}</version>
            </dependency>
            <dependency>
                <!-- must manage the httpclient to avoid dependency convergence errors -->
                <!-- between rest-assured and wiremock. And you must pay attention because -->
                <!-- the httpclient is also needed by resteasy provided by EAP/Wildfly etc. -->
                <!-- in scope runtime. If you define the scope here it might affect your packaging! -->
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${apache.httpclient.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <!-- must have a managed byte-buddy dependency because wildfly manages it as well -->
                <!-- (with a quite old version, breaking some mockito tests) -->
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${byte-buddy.version}</version>
            </dependency>
            <dependency>
                <!-- mockito depends on byte-buddy-agent -->
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy-agent</artifactId>
                <version>${byte-buddy.version}</version>
            </dependency>
            <dependency>
                <!-- must have managed asm dependencies to make sure we use a version compatible with byte-buddy -->
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-util</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-tree</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm-analysis</artifactId>
                <version>${asm.version}</version>
            </dependency>
            
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk18on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>

            <dependency>
                <groupId>io.opentelemetry.instrumentation</groupId>
                <artifactId>opentelemetry-instrumentation-annotations</artifactId>
                <version>${io.opentelemetry.instrumentation.version}</version>
            </dependency>

            <!-- testing -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-launcher</artifactId>
                <version>${junit.platform.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.opentest4j</groupId>
                <artifactId>opentest4j</artifactId>
                <version>${opentest4j.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- junit 5 no longer includes hamcrest -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- some testing libraries depend on `hamcrest-core` instead of `hamcrest` -->
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- some testing libraries depend on `hamcrest-library` instead of `hamcrest` -->
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>${equalsverifier.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>net.javacrumbs.json-unit</groupId>
                <artifactId>json-unit</artifactId>
                <version>${json.unit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.skyscreamer</groupId>
                <artifactId>jsonassert</artifactId>
                <version>${jsonassert.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${restassured.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.wiremock</groupId>
                <artifactId>wiremock</artifactId>
                <version>${wiremock.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <!-- skips surefire tests without skipping failsafe tests.
                         Property value seems to magically default to false -->
                    <skipTests>${skip.surefire.tests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <argLine>${jacoco.integration.agent.arg}</argLine>
                    <classpathDependencyExcludes>
                        <classpathDependencyExcludes>javax:javaee-api</classpathDependencyExcludes>
                    </classpathDependencyExcludes>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- apache maven plugins -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>${maven.ear.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${maven.ejb.plugin.version}</version>
                    <configuration>
                        <ejbVersion>3.1</ejbVersion>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.plugin.version}</version>
                    <configuration>
                        <additionalJOption>-Xdoclint:none</additionalJOption>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven.release.plugin.version}</version>
                    <configuration>
                        <updateBranchVersions>true</updateBranchVersions>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.plugin.version}</version>
                    <configuration>
                        <encoding>UTF-8</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>${maven.scm.plugin.version}</version>
                    <configuration>
                        <connectionType>developerConnection</connectionType>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven.shade.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>

                <!-- thirdparty plugins -->
                <plugin>
                    <groupId>org.asciidoctor</groupId>
                    <artifactId>asciidoctor-maven-plugin</artifactId>
                    <version>${asciidoctor.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>extra-enforcer-rules</artifactId>
                    <version>${extra-enforcer-rules.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.openapitools</groupId>
                    <artifactId>openapi-generator-maven-plugin</artifactId>
                    <version>${openapi-generator.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>${nexus-staging.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>io.swagger.codegen.v3</groupId>
                    <artifactId>swagger-codegen-maven-plugin</artifactId>
                    <version>${swagger-codegen.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${versions.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>${wildfly.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <configuration>
                                <propertyName>jacoco.integration.agent.arg</propertyName>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>java9plus</id>
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven.compiler.plugin.version}</version>
                        <configuration>
                            <!-- starting with Java 9 javac should be called with -release N -->
                            <release>${java.release}</release>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>linux</id>
            <activation>
                <os>
                    <family>unix</family>
                </os>
            </activation>
            <properties>
                <!-- on linux systems use the HOSTNAME environment variable -->
                <!-- to override the default from the <properties> section above -->
                <docker-host-internal>${env.HOSTNAME}</docker-host-internal>
            </properties>
        </profile>

        <!-- profile to test that the referenced versions exist for typical dependencies -->
        <profile>
            <id>dependencies-existence</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven.dependency.plugin.version}</version>
                        <executions>
                            <execution>
                                <id>analyze</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>analyze-only</goal>
                                </goals>
                                <configuration>
                                    <verbose>true</verbose>
                                    <failOnWarning>true</failOnWarning>
                                </configuration>
                            </execution>
                            <execution>
                                <id>analyze-dep-mgt</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>analyze-dep-mgt</goal>
                                </goals>
                                <configuration>
                                    <failBuild>true</failBuild>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>${maven.enforcer.plugin.version}</version>
                        <configuration>
                            <rules>
                                <dependencyConvergence/>
                            </rules>
                            <fail>true</fail>
                        </configuration>
                        <executions>
                            <execution>
                                <id>enforce-versions</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
