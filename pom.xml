<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.schlau.wurzeln.root</groupId>
    <artifactId>root</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>${project.groupId}.${project.artifactId}</name>

    <modules>
        <module>jboss-eap-7.1</module>
        <module>quarkus</module>
        <module>thorntail-2.2</module>
        <module>thorntail-2.3</module>
        <module>thorntail-2.4</module>
        <module>wildfly-15</module>
        <module>wildfly-16</module>
        <module>wildfly-17</module>
        <module>update-checker</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Override this with `11` in your application POM if so desired. -->
        <!-- Until Java 8 is a thing of the past we have to live with two versioning schemes (see JEP223): -->
        <!-- - the Java release (the 'de facto' Java major version number, e.g. 8 for Java 1.8, and 9 for Java 9), -->
        <!--   supported in the compiler plugin as `<release>` for JDK 9 and later -->
        <!-- - the official Java version number, e.g. 1.8 for Java 1.8, and 9 for Java 9 -->
        <!--   (this is used for 'legacy' interfaces, e.g. the -source/-target switches of javac) -->
        <java.release>8</java.release>

        <!-- Used only with JDK 1.8 -->
        <java.version>1.8</java.version>

        <!-- Java EE modules that were removed from Java SE after Java 8 -->
        <!-- (see http://openjdk.java.net/jeps/320) -->
        <!-- The versions here are the latest individual version, some servers override them, -->
        <!-- in some cases with different artifacts (that's why group/artifact are variable) -->
        <javax.jaxb.version>2.3.1</javax.jaxb.version>
        <javax.jws.version>1.0-MR1</javax.jws.version>
        <javax.soap-api.version>1.4.0</javax.soap-api.version>
        <javax.activation.version>1.1.1</javax.activation.version>
        <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
        <javax.transaction-api.version>1.3</javax.transaction-api.version>
        <javax.xml.bind.groupId>javax.xml.bind</javax.xml.bind.groupId>
        <javax.xml.bind.artifactId>jaxb-api</javax.xml.bind.artifactId>
        <javax.xml.bind.version>${javax.jaxb.version}</javax.xml.bind.version>
        <javax.xml.ws.groupId>javax.xml.ws</javax.xml.ws.groupId>
        <javax.xml.ws.artifactId>jaxws-api</javax.xml.ws.artifactId>
        <javax.xml.ws.version>${javax.jaxb.version}</javax.xml.ws.version>
        <javax.xml.soap.groupId>javax.xml.soap</javax.xml.soap.groupId>
        <javax.xml.soap.artifactId>javax.xml.soap-api</javax.xml.soap.artifactId>
        <javax.xml.soap.version>${javax.soap-api.version}</javax.xml.soap.version>
        <javax.annotation.groupId>javax.annotation</javax.annotation.groupId>
        <javax.annotation.artifactId>javax.annotation-api</javax.annotation.artifactId>
        <javax.annotation.version>${javax.annotation-api.version}</javax.annotation.version>
        <javax.transaction.groupId>javax.transaction</javax.transaction.groupId>
        <javax.transaction.artifactId>javax.transaction-api</javax.transaction.artifactId>
        <javax.transaction.version>${javax.transaction-api.version}</javax.transaction.version>

        <!-- prevent javadoc failures in JDK 8 -->
        <additionalparam>-Xdoclint:none</additionalparam>

        <!-- it's jacoco-maven-plugin:0.8.2 that requires 3.3.9 -->
        <minimum-maven-version>3.3.9</minimum-maven-version>

        <!-- use 'versions:display-dependency-updates versions:display-plugin-updates' -->
        <!-- in update-checker to find newer versions of artifacts and plugins -->
        <!-- for plugins see also the section in README.md -->

        <!-- non-apache maven plugin versions -->
        <asciidoctor.plugin.version>1.5.8</asciidoctor.plugin.version>
        <build-helper.plugin.version>3.0.0</build-helper.plugin.version>
        <dependency-check.plugin.version>5.2.1</dependency-check.plugin.version>
        <docker.plugin.version>0.31.0</docker.plugin.version>
        <jacoco.plugin.version>0.8.4</jacoco.plugin.version>
        <nexus-staging.plugin.version>1.6.8</nexus-staging.plugin.version>
        <openapi-generator.plugin.version>4.1.0</openapi-generator.plugin.version>
        <swagger-codegen.plugin.version>3.0.10</swagger-codegen.plugin.version>
        <versions.plugin.version>2.7</versions.plugin.version>
        <wildfly.plugin.version>2.0.1.Final</wildfly.plugin.version>

        <!-- apache maven plugin versions (in alphabetical order) -->
        <maven.assembly.plugin.version>3.1.1</maven.assembly.plugin.version>
        <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.dependency.plugin.version>3.1.1</maven.dependency.plugin.version>
        <maven.deploy.plugin.version>2.8.2</maven.deploy.plugin.version>
        <maven.ear.plugin.version>3.0.1</maven.ear.plugin.version>
        <maven.ejb.plugin.version>3.0.1</maven.ejb.plugin.version>
        <maven.enforcer.plugin.version>3.0.0-M2</maven.enforcer.plugin.version>
        <maven.failsafe.plugin.version>2.22.2</maven.failsafe.plugin.version>
        <maven.install.plugin.version>2.5.2</maven.install.plugin.version>
        <maven.jar.plugin.version>3.1.2</maven.jar.plugin.version>
        <maven.javadoc.plugin.version>3.1.1</maven.javadoc.plugin.version>
        <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
        <maven.resources.plugin.version>3.1.0</maven.resources.plugin.version>
        <maven.scm.plugin.version>1.11.2</maven.scm.plugin.version>
        <maven.shade.plugin.version>3.2.1</maven.shade.plugin.version>
        <maven.site.plugin.version>3.8.2</maven.site.plugin.version>
        <maven.source.plugin.version>3.1.0</maven.source.plugin.version>
        <maven.surefire.plugin.version>${maven.failsafe.plugin.version}</maven.surefire.plugin.version>
        <maven.war.plugin.version>3.2.3</maven.war.plugin.version>

        <!-- artifact versions -->
        <apache.commons.lang3.version>3.9</apache.commons.lang3.version>
        <logback.version>1.2.3</logback.version>
        <lombok.version>1.18.8</lombok.version>
        <slf4j.version>1.7.28</slf4j.version>

        <!-- latest Jackson version for projects independent of an application server (AS) -->
        <!-- most of the AS submodules redefine it with an older version -->
        <jackson-2-version>2.9.9</jackson-2-version>

        <!-- Java Expression Language (JSR 341) generally defined; the application servers -->
        <!-- have slightly different version strings (3.0.1-b08-jbossorg-1 and 3.0.1.b08-redhat-1), -->
        <!-- but it's always 3.0.1 -->
        <javax.el.version>3.0.1-b11</javax.el.version>

        <!-- testing and static analysis -->
        <junit.platform.version>1.5.1</junit.platform.version>
        <junit.jupiter.version>5.5.1</junit.jupiter.version>
        <hamcrest.version>2.1</hamcrest.version>
        <mockito.version>3.0.0</mockito.version>
        <byte-buddy.version>1.10.1</byte-buddy.version>
        <equalsverifier.version>3.1.9</equalsverifier.version>
        <json.unit.version>2.8.0</json.unit.version>
        <restassured.version>4.0.0</restassured.version>
        <wiremock.version>2.24.1</wiremock.version>
    </properties>

    <!-- no dependencies in this POM, as dependencies from a parent POM can't be excluded -->

    <dependencyManagement>
        <dependencies>
            <!-- Java EE modules removed from Java SE in Java 11 -->
            <!-- Usually there is also a dependencyManagement entry in the AS pom -->
            <dependency>
                <groupId>${javax.xml.bind.groupId}</groupId>
                <artifactId>${javax.xml.bind.artifactId}</artifactId>
                <version>${javax.xml.bind.version}</version>
            </dependency>
            <dependency>
                <groupId>${javax.xml.ws.groupId}</groupId>
                <artifactId>${javax.xml.ws.artifactId}</artifactId>
                <version>${javax.xml.ws.version}</version>
            </dependency>
            <dependency>
                <groupId>${javax.xml.soap.groupId}</groupId>
                <artifactId>${javax.xml.soap.artifactId}</artifactId>
                <version>${javax.xml.soap.version}</version>
            </dependency>
            <dependency>
                <groupId>${javax.annotation.groupId}</groupId>
                <artifactId>${javax.annotation.artifactId}</artifactId>
                <version>${javax.annotation.version}</version>
            </dependency>
            <dependency>
                <groupId>${javax.transaction.groupId}</groupId>
                <artifactId>${javax.transaction.artifactId}</artifactId>
                <version>${javax.transaction.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.jws</groupId>
                <artifactId>jsr181-api</artifactId>
                <version>${javax.jws.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.activation</groupId>
                <artifactId>activation</artifactId>
                <version>${javax.activation.version}</version>
            </dependency>

            <!-- utils -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${apache.commons.lang3.version}</version>
            </dependency>

            <!-- logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <!-- testing -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- junit 5 no longer includes hamcrest -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-junit-jupiter</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <!-- must have a managed byte-buddy test-dependency because wildfly-17 manages it -->
                <!-- as well with a quite old version (breaking some mockito tests) -->
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <version>${byte-buddy.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>nl.jqno.equalsverifier</groupId>
                <artifactId>equalsverifier</artifactId>
                <version>${equalsverifier.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <!-- skips surefire tests without skipping failsafe tests.
                             Property value seems to magically default to false -->
                    <skipTests>${skip.surefire.tests}</skipTests>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${maven.failsafe.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <argLine>${jacoco.integration.agent.arg}</argLine>
                    <classpathDependencyExcludes>
                        <classpathDependencyExcludes>javax:javaee-api</classpathDependencyExcludes>
                    </classpathDependencyExcludes>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- apache maven -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven.release.plugin.version}</version>
                    <configuration>
                        <updateBranchVersions>true</updateBranchVersions>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${maven.war.plugin.version}</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>

                <!-- JUnit Code Coverage -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>pre-unit-test</id>
                            <phase>process-test-classes</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <configuration>
                                <propertyName>jacoco.integration.agent.arg</propertyName>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>analyze</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <configuration>
                                <verbose>true</verbose>
                                <failOnWarning>true</failOnWarning>
                            </configuration>
                        </execution>
                        <execution>
                            <id>analyze-dep-mgt</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>analyze-dep-mgt</goal>
                            </goals>
                            <configuration>
                                <failBuild>true</failBuild>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.plugin.version}</version>
                    <configuration>
                        <rules>
                            <dependencyConvergence/>
                        </rules>
                        <fail>true</fail>
                    </configuration>
                    <executions>
                        <execution>
                            <id>enforce-versions</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check.plugin.version}</version>
                    <configuration>
                        <format>ALL</format>
                        <cveValidForHours>24</cveValidForHours>
                        <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>none</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>java9plus</id>
            <activation>
                <jdk>[9,)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven.compiler.plugin.version}</version>
                        <configuration>
                            <!-- starting with Java 9 javac should be called with -release N -->
                            <release>${java.release}</release>

                            <!-- forbid the plugin to use the javax.tools Compiler API, because then sometimes -->
                            <!-- you get an AssertionError in JavaCompiler.readSourceFile instead of a proper error message -->
                            <!-- see https://issues.apache.org/jira/browse/MCOMPILER-346 -->
                            <forceJavacCompilerUse>true</forceJavacCompilerUse>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>java8</id>
            <activation>
                <jdk>1.8</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>${maven.compiler.plugin.version}</version>
                        <configuration>
                            <!-- Java 8 is the last version where `javac` should be called with -source N -target N -->
                            <source>${java.version}</source>
                            <target>${java.version}</target>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- profile to test that the referenced versions exist for typical dependencies -->
        <profile>
            <id>dependencies-existence</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <version>${maven.dependency.plugin.version}</version>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <version>${maven.enforcer.plugin.version}</version>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
